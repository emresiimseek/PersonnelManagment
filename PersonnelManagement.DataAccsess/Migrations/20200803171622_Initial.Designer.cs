// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonnelManagement.DataAccsess;

namespace PersonnelManagement.DataAccsess.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200803171622_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreatedOn = new DateTime(2020, 4, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 4, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "White Inc"
                        },
                        new
                        {
                            DepartmentId = 2,
                            CreatedOn = new DateTime(2019, 12, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Stokes"
                        },
                        new
                        {
                            DepartmentId = 3,
                            CreatedOn = new DateTime(2019, 10, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 8, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Little-Kling"
                        },
                        new
                        {
                            DepartmentId = 4,
                            CreatedOn = new DateTime(2020, 4, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Berge-Zieme"
                        },
                        new
                        {
                            DepartmentId = 5,
                            CreatedOn = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 3, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Harber"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("JobId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            CreatedOn = new DateTime(2020, 5, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Colorado bears"
                        },
                        new
                        {
                            JobId = 2,
                            CreatedOn = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 11, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Connecticut rabbits"
                        },
                        new
                        {
                            JobId = 3,
                            CreatedOn = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Alaska oracles"
                        },
                        new
                        {
                            JobId = 4,
                            CreatedOn = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 1, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Massachusetts goblins"
                        },
                        new
                        {
                            JobId = 5,
                            CreatedOn = new DateTime(2019, 12, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 5, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Maine kangaroos"
                        },
                        new
                        {
                            JobId = 6,
                            CreatedOn = new DateTime(2020, 2, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 9, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Texas werewolves"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.JobRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("RoleId");

                    b.ToTable("jobRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 6, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 1,
                            ModifiedOn = new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 2,
                            ModifiedOn = new DateTime(2020, 2, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 3,
                            ModifiedOn = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 5
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 4,
                            ModifiedOn = new DateTime(2020, 5, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 1, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 5,
                            ModifiedOn = new DateTime(2020, 3, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 6,
                            ModifiedOn = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Personnel", b =>
                {
                    b.Property<int>("PersonnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfRecuitment")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmploymentendDate")
                        .HasColumnType("datetime");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("PersonnelId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobId");

                    b.ToTable("Personnels");

                    b.HasData(
                        new
                        {
                            PersonnelId = 1,
                            CreatedOn = new DateTime(2020, 6, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 8, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 4,
                            EmploymentendDate = new DateTime(2020, 4, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 1,
                            LastName = "Hayes",
                            ModifiedOn = new DateTime(2020, 7, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Neal",
                            Password = "Mr.",
                            Salary = 2500.15m,
                            UserName = "Product Branding Specialist"
                        },
                        new
                        {
                            PersonnelId = 2,
                            CreatedOn = new DateTime(2020, 7, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 4,
                            EmploymentendDate = new DateTime(2019, 10, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 6,
                            LastName = "Baumbach",
                            ModifiedOn = new DateTime(2020, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Melisa",
                            Password = "Dr.",
                            Salary = 5000.30m,
                            UserName = "Future Implementation Liaison"
                        },
                        new
                        {
                            PersonnelId = 3,
                            CreatedOn = new DateTime(2020, 4, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 8, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 2,
                            EmploymentendDate = new DateTime(2019, 11, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 3,
                            LastName = "Ullrich",
                            ModifiedOn = new DateTime(2020, 6, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Laila",
                            Password = "Mr.",
                            Salary = 7500.45m,
                            UserName = "Direct Accounts Engineer"
                        },
                        new
                        {
                            PersonnelId = 4,
                            CreatedOn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            EmploymentendDate = new DateTime(2019, 10, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 6,
                            LastName = "Kunde",
                            ModifiedOn = new DateTime(2019, 9, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Helena",
                            Password = "Miss",
                            Salary = 10000.60m,
                            UserName = "Dynamic Tactics Analyst"
                        },
                        new
                        {
                            PersonnelId = 5,
                            CreatedOn = new DateTime(2020, 4, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 12, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            EmploymentendDate = new DateTime(2020, 3, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 5,
                            LastName = "Christiansen",
                            ModifiedOn = new DateTime(2019, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Natasha",
                            Password = "Dr.",
                            Salary = 12500.75m,
                            UserName = "Dynamic Functionality Analyst"
                        },
                        new
                        {
                            PersonnelId = 6,
                            CreatedOn = new DateTime(2019, 12, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2020, 7, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 2,
                            EmploymentendDate = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 2,
                            LastName = "Ondricka",
                            ModifiedOn = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Sebastian",
                            Password = "Mr.",
                            Salary = 15000.90m,
                            UserName = "National Communications Executive"
                        },
                        new
                        {
                            PersonnelId = 7,
                            CreatedOn = new DateTime(2019, 8, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2020, 1, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 4,
                            EmploymentendDate = new DateTime(2019, 11, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 1,
                            LastName = "Sawayn",
                            ModifiedOn = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Donnell",
                            Password = "Miss",
                            Salary = 17501.05m,
                            UserName = "Principal Solutions Specialist"
                        },
                        new
                        {
                            PersonnelId = 8,
                            CreatedOn = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 11, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            EmploymentendDate = new DateTime(2019, 8, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 5,
                            LastName = "Vandervort",
                            ModifiedOn = new DateTime(2019, 10, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Annamarie",
                            Password = "Mr.",
                            Salary = 20001.20m,
                            UserName = "Human Functionality Assistant"
                        },
                        new
                        {
                            PersonnelId = 9,
                            CreatedOn = new DateTime(2019, 8, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            EmploymentendDate = new DateTime(2019, 8, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 1,
                            LastName = "Nienow",
                            ModifiedOn = new DateTime(2020, 5, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Merritt",
                            Password = "Mrs.",
                            Salary = 22501.35m,
                            UserName = "District Response Facilitator"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedOn = new DateTime(2019, 8, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 8, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Dimitri Johns"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedOn = new DateTime(2020, 5, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 5, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Reina O'Kon"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedOn = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Tiffany Dibbert"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedOn = new DateTime(2019, 10, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 6, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rocky Kirlin"
                        },
                        new
                        {
                            RoleId = 5,
                            CreatedOn = new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Kamren Gulgowski"
                        },
                        new
                        {
                            RoleId = 6,
                            CreatedOn = new DateTime(2020, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Eric Kreiger"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.JobRoles", b =>
                {
                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Job", "Job")
                        .WithMany("JobRoles")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Role", "Role")
                        .WithMany("JobRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Personnel", b =>
                {
                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Department", "Department")
                        .WithMany("Personnels")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Job", "Job")
                        .WithMany("Personnels")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
