// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonnelManagement.DataAccsess;

namespace PersonnelManagement.DataAccsess.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200713224136_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreatedOn = new DateTime(2019, 8, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 11, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Hoppe and Sporer"
                        },
                        new
                        {
                            DepartmentId = 2,
                            CreatedOn = new DateTime(2019, 8, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Boyer-Aufderhar"
                        },
                        new
                        {
                            DepartmentId = 3,
                            CreatedOn = new DateTime(2019, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 12, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Parker and Lehner"
                        },
                        new
                        {
                            DepartmentId = 4,
                            CreatedOn = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 8, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Barrows and Haag"
                        },
                        new
                        {
                            DepartmentId = 5,
                            CreatedOn = new DateTime(2020, 6, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 3, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Durgan-Beatty"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("JobId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            CreatedOn = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 9, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Arizona werewolves"
                        },
                        new
                        {
                            JobId = 2,
                            CreatedOn = new DateTime(2020, 5, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 7, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Vermont elves"
                        },
                        new
                        {
                            JobId = 3,
                            CreatedOn = new DateTime(2020, 2, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 6, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Iowa ogres"
                        },
                        new
                        {
                            JobId = 4,
                            CreatedOn = new DateTime(2020, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 10, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Illinois ants"
                        },
                        new
                        {
                            JobId = 5,
                            CreatedOn = new DateTime(2019, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 10, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "New York goblins"
                        },
                        new
                        {
                            JobId = 6,
                            CreatedOn = new DateTime(2019, 10, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 7, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "South Dakota exorcists"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.JobRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("RoleId");

                    b.ToTable("jobRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2019, 9, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 1,
                            ModifiedOn = new DateTime(2019, 11, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2019, 11, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 2,
                            ModifiedOn = new DateTime(2020, 5, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 3,
                            ModifiedOn = new DateTime(2019, 10, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 6, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 4,
                            ModifiedOn = new DateTime(2019, 12, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 3, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 5,
                            ModifiedOn = new DateTime(2020, 4, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2019, 12, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 6,
                            ModifiedOn = new DateTime(2020, 1, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Personnel", b =>
                {
                    b.Property<int>("PersonnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfRecuitment")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmploymentendDate")
                        .HasColumnType("datetime");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PersonnelId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobId");

                    b.ToTable("Personnels");

                    b.HasData(
                        new
                        {
                            PersonnelId = 1,
                            CreatedOn = new DateTime(2019, 11, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 8, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            EmploymentendDate = new DateTime(2019, 10, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 3,
                            LastName = "Beatty",
                            ModifiedOn = new DateTime(2019, 10, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Jacey",
                            Salary = 2500.15m
                        },
                        new
                        {
                            PersonnelId = 2,
                            CreatedOn = new DateTime(2019, 10, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 12, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 4,
                            EmploymentendDate = new DateTime(2020, 2, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 6,
                            LastName = "Emmerich",
                            ModifiedOn = new DateTime(2020, 3, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Flavie",
                            Salary = 5000.30m
                        },
                        new
                        {
                            PersonnelId = 3,
                            CreatedOn = new DateTime(2019, 10, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 1,
                            EmploymentendDate = new DateTime(2019, 9, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 4,
                            LastName = "Hickle",
                            ModifiedOn = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Luna",
                            Salary = 7500.45m
                        },
                        new
                        {
                            PersonnelId = 4,
                            CreatedOn = new DateTime(2020, 2, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            EmploymentendDate = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 3,
                            LastName = "Yundt",
                            ModifiedOn = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Vance",
                            Salary = 10000.60m
                        },
                        new
                        {
                            PersonnelId = 5,
                            CreatedOn = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2020, 5, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 1,
                            EmploymentendDate = new DateTime(2019, 7, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 1,
                            LastName = "Gerlach",
                            ModifiedOn = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Roberto",
                            Salary = 12500.75m
                        },
                        new
                        {
                            PersonnelId = 6,
                            CreatedOn = new DateTime(2019, 8, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 4,
                            EmploymentendDate = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 4,
                            LastName = "Labadie",
                            ModifiedOn = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Josiane",
                            Salary = 15000.90m
                        },
                        new
                        {
                            PersonnelId = 7,
                            CreatedOn = new DateTime(2020, 3, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2020, 5, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 4,
                            EmploymentendDate = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 6,
                            LastName = "Rippin",
                            ModifiedOn = new DateTime(2019, 12, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Gabriella",
                            Salary = 17501.05m
                        },
                        new
                        {
                            PersonnelId = 8,
                            CreatedOn = new DateTime(2020, 3, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2019, 10, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            EmploymentendDate = new DateTime(2020, 6, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 1,
                            LastName = "Crist",
                            ModifiedOn = new DateTime(2020, 3, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Natalia",
                            Salary = 20001.20m
                        },
                        new
                        {
                            PersonnelId = 9,
                            CreatedOn = new DateTime(2019, 8, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            DateOfRecuitment = new DateTime(2020, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 4,
                            EmploymentendDate = new DateTime(2019, 12, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            JobId = 2,
                            LastName = "Cronin",
                            ModifiedOn = new DateTime(2019, 11, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rosalee",
                            Salary = 22501.35m
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedOn = new DateTime(2019, 8, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 3, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Verna Nitzsche"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedOn = new DateTime(2019, 9, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Marcus Runolfsdottir"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedOn = new DateTime(2019, 11, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 5, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Emilio Bayer"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedOn = new DateTime(2019, 10, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2019, 9, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Lindsey Kuphal"
                        },
                        new
                        {
                            RoleId = 5,
                            CreatedOn = new DateTime(2019, 8, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Delfina Carroll"
                        },
                        new
                        {
                            RoleId = 6,
                            CreatedOn = new DateTime(2019, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedOn = new DateTime(2020, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Makenzie Hills"
                        });
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.JobRoles", b =>
                {
                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Job", "Job")
                        .WithMany("JobRoles")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Role", "Role")
                        .WithMany("JobRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonnelManagement.EntityFramework.Concrate.Personnel", b =>
                {
                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Department", "Department")
                        .WithMany("Personnels")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonnelManagement.EntityFramework.Concrate.Job", "Job")
                        .WithMany("Personnels")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
